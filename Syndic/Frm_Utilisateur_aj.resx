<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>